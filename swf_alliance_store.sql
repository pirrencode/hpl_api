-- ALLIANCE STORE CREATION;

CREATE SCHEMA IF NOT EXISTS ALLIANCE_STORE;

DROP TABLE IF EXISTS HPL_SYSTEM_DYNAMICS.ALLIANCE_STORE.HPL_SD_CRS_ALLIANCE;
CREATE TABLE IF NOT EXISTS HPL_SYSTEM_DYNAMICS.ALLIANCE_STORE.HPL_SD_CRS_ALLIANCE (
    TIME INT,
    CR_ENV FLOAT,
    CR_SAC FLOAT,
    CR_TFE FLOAT,
    CR_SFY FLOAT,
    CR_REG FLOAT,
    CR_QMF FLOAT,
    CR_ECV FLOAT,
    CR_USB FLOAT,
    CR_RLB FLOAT,
    CR_INF FLOAT,
    CR_SCL FLOAT
);

DROP TABLE IF EXISTS HPL_SYSTEM_DYNAMICS.ALLIANCE_STORE.PROJECT_STATUS;
CREATE TABLE IF NOT EXISTS HPL_SYSTEM_DYNAMICS.ALLIANCE_STORE.PROJECT_STATUS (
    HISTORY_DATE VARCHAR,
    PROJECT_STATUS VARCHAR,
    REPORTER VARCHAR    
);

--
-- BACKUP TABLES SCRIPT
--

DROP TABLE IF EXISTS HPL_SYSTEM_DYNAMICS.ALLIANCE_STORE.HPL_SD_CRS_ALLIANCE_BCK;
CREATE TABLE IF NOT EXISTS HPL_SYSTEM_DYNAMICS.ALLIANCE_STORE.HPL_SD_CRS_ALLIANCE_BCK (
    TIME INT,
    CR_ENV FLOAT,
    CR_SAC FLOAT,
    CR_TFE FLOAT,
    CR_SFY FLOAT,
    CR_REG FLOAT,
    CR_QMF FLOAT,
    CR_ECV FLOAT,
    CR_USB FLOAT,
    CR_RLB FLOAT,
    CR_INF FLOAT,
    CR_SCL FLOAT
);

DROP TABLE IF EXISTS HPL_SYSTEM_DYNAMICS.ALLIANCE_STORE.PROJECT_STATUS_BCK;
CREATE TABLE IF NOT EXISTS HPL_SYSTEM_DYNAMICS.ALLIANCE_STORE.PROJECT_STATUS_BCK (
    HISTORY_DATE VARCHAR,
    PROJECT_STATUS VARCHAR,
    REPORTER VARCHAR    
);